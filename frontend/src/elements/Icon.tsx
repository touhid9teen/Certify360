import React from 'react';
import { SVGProps } from 'react';

// Google
const GoogleIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '22'}
      height={height ?? '22'}
      viewBox={`0 0 ${width ?? '22'} ${height ?? '22'}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g clipPath="url(#clip0_124_201)">
        <path
          d="M21.1696 9.08742L12.196 9.08699C11.7997 9.08699 11.4785 9.40814 11.4785 9.80439V12.6711C11.4785 13.0672 11.7997 13.3885 12.1959 13.3885H17.2493C16.696 14.8245 15.6632 16.0272 14.3455 16.7913L16.5002 20.5214C19.9567 18.5224 22.0002 15.0149 22.0002 11.0885C22.0002 10.5294 21.959 10.1298 21.8766 9.67974C21.814 9.33784 21.5171 9.08742 21.1696 9.08742Z"
          fill={fill ?? '#167EE6'}
        />
        <path
          d="M11.0002 17.6956C8.52714 17.6956 6.36822 16.3445 5.2087 14.345L1.47876 16.4949C3.3769 19.7847 6.93274 22 11.0002 22C12.9955 22 14.8783 21.4628 16.5002 20.5265V20.5214L14.3454 16.7913C13.3598 17.3629 12.2192 17.6956 11.0002 17.6956Z"
          fill={fill ?? '#12B347'}
        />
        <path
          d="M16.5 20.5265V20.5214L14.3452 16.7913C13.3596 17.3629 12.2192 17.6957 11 17.6957V22C12.9953 22 14.8782 21.4628 16.5 20.5265Z"
          fill={fill ?? '#0F993E'}
        />
        <path
          d="M4.30435 11C4.30435 9.78102 4.63702 8.64058 5.20854 7.65501L1.4786 5.50511C0.537195 7.1219 0 8.99954 0 11C0 13.0005 0.537195 14.8781 1.4786 16.4949L5.20854 14.345C4.63702 13.3594 4.30435 12.219 4.30435 11Z"
          fill={fill ?? '#FFD500'}
        />
        <path
          d="M11.0002 4.30435C12.6128 4.30435 14.0941 4.87738 15.2511 5.83056C15.5366 6.06568 15.9515 6.04871 16.2129 5.78725L18.244 3.75611C18.5407 3.45946 18.5196 2.97387 18.2027 2.69895C16.2641 1.0172 13.7419 0 11.0002 0C6.93274 0 3.3769 2.21534 1.47876 5.50511L5.2087 7.65501C6.36822 5.65555 8.52714 4.30435 11.0002 4.30435Z"
          fill={fill ?? '#FF4B26'}
        />
        <path
          d="M15.251 5.83056C15.5364 6.06568 15.9513 6.04871 16.2128 5.78725L18.2439 3.75611C18.5405 3.45946 18.5194 2.97387 18.2025 2.69895C16.264 1.01716 13.7417 0 11 0V4.30435C12.6126 4.30435 14.094 4.87738 15.251 5.83056Z"
          fill={fill ?? '#D93F21'}
        />
      </g>
      <defs>
        <clipPath id="clip0_124_201">
          <rect width={width ?? '22'} height={height ?? '22'} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

// Facebook
const FacebookIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '26'}
      height={height ?? '26'}
      viewBox={`0 0 ${width ?? '26'} ${height ?? '26'}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g clipPath="url(#clip0_124_321)">
        <path
          d="M13 0C20.1801 0 26 5.82075 26 13C26 20.1801 20.1801 26 13 26C5.81985 26 0 20.1801 0 13C0 5.82075 5.81994 0 13 0Z"
          fill={fill ?? '#3B5998'}
        />
        <path
          d="M14.5828 8.94964H16.2582V6.47476H14.2887V6.48369C11.9024 6.56821 11.4133 7.90962 11.3702 9.31851H11.3653V10.5543H9.7403V12.978H11.3653V19.4747H13.8142V12.978H15.8202L16.2077 10.5543H13.815V9.80769C13.815 9.33154 14.1318 8.94964 14.5828 8.94964Z"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_124_321">
          <rect width={width ?? '26'} height={height ?? '26'} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

// Charge used in pramary button
const ChargeIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? 47}
      height={height ?? 47}
      viewBox={`0 0 ${width ?? 47} ${height ?? 47}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        opacity="0.4"
        d="M23.4247 42.8356C33.9786 42.8356 42.5342 34.28 42.5342 23.726C42.5342 13.1721 33.9786 4.61645 23.4247 4.61645C12.8707 4.61645 4.31506 13.1721 4.31506 23.726C4.31506 34.28 12.8707 42.8356 23.4247 42.8356Z"
        fill={fill ?? 'black'}
      />
      <path
        d="M17.0803 23.554L20.2333 24.3376L18.418 31.6756C17.9975 33.3955 18.8383 33.9689 20.2907 32.956L30.1895 26.0957C31.3934 25.2548 31.2213 24.2802 29.7881 23.9171L26.6351 23.1337L28.4505 15.7956C28.8709 14.0757 28.0301 13.5024 26.5777 14.5152L16.679 21.3756C15.4751 22.2165 15.647 23.191 17.0803 23.554Z"
        fill={fill ?? 'black'}
      />
    </svg>
  );
};

// Nav Icon
const NavIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '33'}
      height={height ?? '34'}
      viewBox={`0 0 ${width ?? 33} ${height ?? 34}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <rect y=".5" width={width ?? '33'} height={height ?? '34'} rx="8" fill="#F5F3FF" />
      {/*this fill is for specific background*/}
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M7.25 16.5C7.25 16.0858 7.58579 15.75 8 15.75L23.9996 15.75C24.4138 15.75 24.7496 16.0858 24.7496 16.5C24.7496 16.9142 24.4138 17.25 23.9996 17.25H8C7.58579 17.25 7.25 16.9142 7.25 16.5ZM10.5331 23.5C10.5331 23.0858 10.8689 22.75 11.2831 22.75L24 22.75C24.4142 22.75 24.75 23.0858 24.75 23.5C24.75 23.9142 24.4142 24.25 24 24.25L11.2831 24.25C10.8689 24.25 10.5331 23.9142 10.5331 23.5ZM16.2219 9.5C16.2219 9.08579 16.5577 8.75 16.9719 8.75L24 8.75C24.4142 8.75 24.75 9.08579 24.75 9.5C24.75 9.91421 24.4142 10.25 24 10.25L16.9719 10.25C16.5577 10.25 16.2219 9.91421 16.2219 9.5Z"
        fill={fill ?? '#25254C'}
      />
    </svg>
  );
};

// Plus circle
const PlusCircleIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '18'}
      height={height ?? '18'}
      viewBox={`0 0 ${width ?? 18} ${height ?? 18}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M6.02977 0.3437C7.98343 -0.114566 10.0166 -0.114567 11.9703 0.3437C14.7916 1.0055 16.9946 3.20843 17.6564 6.02977C18.1146 7.98343 18.1146 10.0166 17.6564 11.9703C16.9946 14.7916 14.7916 16.9946 11.9703 17.6564C10.0166 18.1146 7.98343 18.1146 6.02977 17.6564C3.20843 16.9946 1.0055 14.7916 0.343701 11.9703C-0.114567 10.0166 -0.114567 7.98343 0.343701 6.02976C1.0055 3.20842 3.20842 1.0055 6.02977 0.3437ZM9.6 6.60678C9.6 6.27541 9.33137 6.00678 9 6.00678C8.66863 6.00678 8.4 6.27541 8.4 6.60678V8.4H6.60678C6.27541 8.4 6.00678 8.66863 6.00678 9C6.00678 9.33137 6.27541 9.6 6.60678 9.6H8.4V11.3932C8.4 11.7246 8.66863 11.9932 9 11.9932C9.33137 11.9932 9.6 11.7246 9.6 11.3932V9.6H11.3932C11.7246 9.6 11.9932 9.33137 11.9932 9C11.9932 8.66863 11.7246 8.4 11.3932 8.4H9.6V6.60678Z"
        fill={fill ?? 'white'}
      />
    </svg>
  );
};

// Cross Circle
const CrossCircleIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M3.35288 8.95043C4.00437 6.17301 6.17301 4.00437 8.95043 3.35288C10.9563 2.88237 13.0437 2.88237 15.0496 3.35288C17.827 4.00437 19.9956 6.17301 20.6471 8.95044C21.1176 10.9563 21.1176 13.0437 20.6471 15.0496C19.9956 17.827 17.827 19.9956 15.0496 20.6471C13.0437 21.1176 10.9563 21.1176 8.95044 20.6471C6.17301 19.9956 4.00437 17.827 3.35288 15.0496C2.88237 13.0437 2.88237 10.9563 3.35288 8.95043Z"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
      <path
        d="M13.7677 10.2322L10.2322 13.7678M13.7677 13.7678L10.2322 10.2322"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
        strokeLinecap="round"
      />
    </svg>
  );
};

// Contact
const ContactIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M5 19.1115C5 16.6984 6.69732 14.643 9.00404 14.2627L9.21182 14.2284C11.0589 13.9239 12.9411 13.9239 14.7882 14.2284L14.996 14.2627C17.3027 14.643 19 16.6984 19 19.1115C19 20.1545 18.1815 21 17.1719 21H6.82813C5.81848 21 5 20.1545 5 19.1115Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
      />
      <path
        d="M16.0834 6.9375C16.0834 9.11212 14.2552 10.875 12 10.875C9.74486 10.875 7.91669 9.11212 7.91669 6.9375C7.91669 4.76288 9.74486 3 12 3C14.2552 3 16.0834 4.76288 16.0834 6.9375Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
      />
      <path
        d="M5 19.1115C5 16.6984 6.69732 14.643 9.00404 14.2627L9.21182 14.2284C11.0589 13.9239 12.9411 13.9239 14.7882 14.2284L14.996 14.2627C17.3027 14.643 19 16.6984 19 19.1115C19 20.1545 18.1815 21 17.1719 21H6.82813C5.81848 21 5 20.1545 5 19.1115Z"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
      <path
        d="M16.0834 6.9375C16.0834 9.11212 14.2552 10.875 12 10.875C9.74486 10.875 7.91669 9.11212 7.91669 6.9375C7.91669 4.76288 9.74486 3 12 3C14.2552 3 16.0834 4.76288 16.0834 6.9375Z"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
    </svg>
  );
};

// Frequent
const FrequentIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <circle cx="12" cy="12" r="9" fill={fill ?? '#363853'} fillOpacity="0.15" />
      <path
        d="M3 12.1525C3 17.0389 7.02944 21 12 21C16.9706 21 21 17.0389 21 12.1525C21 7.26622 17 3.30508 12 3.30508C6 3.30508 3 8.22034 3 8.22034M3 8.22034L3 3M3 8.22034H7.6551"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M13.8386 14.5L11 12.6939V9"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
      />
      <path
        d="M13.8386 14.5L11 12.6939V9"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

// Import
const ImportIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M3.35288 8.95043C4.00437 6.17301 6.17301 4.00437 8.95043 3.35288C10.9563 2.88237 13.0437 2.88237 15.0496 3.35288C17.827 4.00437 19.9956 6.17301 20.6471 8.95044C21.1176 10.9563 21.1176 13.0437 20.6471 15.0496C19.9956 17.827 17.827 19.9956 15.0496 20.6471C13.0437 21.1176 10.9563 21.1176 8.95044 20.6471C6.17301 19.9956 4.00437 17.827 3.35288 15.0496C2.88237 13.0437 2.88237 10.9563 3.35288 8.95043Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
      <path
        d="M14.5 11L12 13.5L9.5 11"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

// Trash Icon
const TrashIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M5 7.03259H19V12.1758C19 13.7509 18.7784 15.318 18.3418 16.8303C17.7398 18.9158 16.0065 20.4696 13.8817 20.8287L13.724 20.8553C12.5826 21.0482 11.4174 21.0482 10.276 20.8553L10.1183 20.8287C7.99345 20.4696 6.26017 18.9158 5.65815 16.8303C5.22159 15.318 5 13.7509 5 12.1759V7.03259Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
      />
      <path
        d="M3 6.28259C2.58579 6.28259 2.25 6.61838 2.25 7.03259C2.25 7.44681 2.58579 7.78259 3 7.78259V6.28259ZM21 7.78259C21.4142 7.78259 21.75 7.44681 21.75 7.03259C21.75 6.61838 21.4142 6.28259 21 6.28259V7.78259ZM5 7.03259V6.28259H4.25V7.03259H5ZM19 7.03259H19.75V6.28259H19V7.03259ZM18.3418 16.8303L19.0624 17.0383L18.3418 16.8303ZM13.724 20.8553L13.8489 21.5949L13.724 20.8553ZM10.276 20.8553L10.401 20.1158L10.401 20.1158L10.276 20.8553ZM10.1183 20.8287L9.9933 21.5682H9.9933L10.1183 20.8287ZM5.65815 16.8303L4.93757 17.0383L5.65815 16.8303ZM13.8817 20.8287L13.7568 20.0892L13.8817 20.8287ZM7.84254 5.48939L8.52333 5.80406L7.84254 5.48939ZM8.81802 4.18112L8.31749 3.62258V3.62258L8.81802 4.18112ZM10.2779 3.30696L10.5389 4.01009L10.2779 3.30696ZM13.7221 3.30696L13.9831 2.60384V2.60384L13.7221 3.30696ZM16.1575 5.48939L16.8383 5.17471L16.1575 5.48939ZM3 7.78259H21V6.28259H3V7.78259ZM13.7568 20.0892L13.599 20.1158L13.8489 21.5949L14.0067 21.5682L13.7568 20.0892ZM10.401 20.1158L10.2432 20.0892L9.9933 21.5682L10.151 21.5949L10.401 20.1158ZM18.25 7.03259V12.1758H19.75V7.03259H18.25ZM5.75 12.1759V7.03259H4.25V12.1759H5.75ZM18.25 12.1758C18.25 13.6806 18.0383 15.1776 17.6212 16.6223L19.0624 17.0383C19.5185 15.4583 19.75 13.8212 19.75 12.1758H18.25ZM13.599 20.1158C12.5404 20.2947 11.4596 20.2947 10.401 20.1158L10.151 21.5949C11.3751 21.8017 12.6248 21.8017 13.8489 21.5949L13.599 20.1158ZM10.2432 20.0892C8.40523 19.7786 6.90157 18.4335 6.37873 16.6223L4.93757 17.0383C5.61878 19.3981 7.58166 21.1607 9.9933 21.5682L10.2432 20.0892ZM6.37873 16.6223C5.9617 15.1776 5.75 13.6806 5.75 12.1759H4.25C4.25 13.8212 4.48148 15.4583 4.93757 17.0383L6.37873 16.6223ZM14.0067 21.5682C16.4183 21.1607 18.3812 19.3981 19.0624 17.0383L17.6212 16.6223C17.0984 18.4335 15.5947 19.7786 13.7568 20.0892L14.0067 21.5682ZM8.25 7.03259C8.25 6.61367 8.34194 6.19649 8.52333 5.80406L7.16175 5.17471C6.89085 5.76079 6.75 6.39238 6.75 7.03259H8.25ZM8.52333 5.80406C8.70487 5.41133 8.97357 5.04881 9.31855 4.73966L8.31749 3.62258C7.82675 4.06235 7.43251 4.58893 7.16175 5.17471L8.52333 5.80406ZM9.31855 4.73966C9.66369 4.43037 10.0778 4.18126 10.5389 4.01009L10.0169 2.60384C9.38616 2.83798 8.80808 3.18295 8.31749 3.62258L9.31855 4.73966ZM10.5389 4.01009C11.0001 3.8389 11.4968 3.75 12 3.75V2.25C11.3213 2.25 10.6477 2.36972 10.0169 2.60384L10.5389 4.01009ZM12 3.75C12.5032 3.75 12.9999 3.8389 13.4611 4.01009L13.9831 2.60384C13.3523 2.36972 12.6787 2.25 12 2.25V3.75ZM13.4611 4.01009C13.9222 4.18126 14.3363 4.43037 14.6815 4.73966L15.6825 3.62258C15.1919 3.18295 14.6138 2.83798 13.9831 2.60384L13.4611 4.01009ZM14.6815 4.73966C15.0264 5.04881 15.2951 5.41133 15.4767 5.80407L16.8383 5.17471C16.5675 4.58893 16.1733 4.06235 15.6825 3.62258L14.6815 4.73966ZM15.4767 5.80406C15.6581 6.19649 15.75 6.61367 15.75 7.03259H17.25C17.25 6.39238 17.1092 5.7608 16.8383 5.17471L15.4767 5.80406ZM5 7.78259H19V6.28259H5V7.78259Z"
        fill={fill ?? '#363853'}
      />
      <path d="M10 12V16M14 12V16" stroke={fill ?? '#363853'} strokeWidth="1.5" strokeLinecap="round" />
    </svg>
  );
};

// Other Contact Icon
const OtherContactIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M3.29701 5.2338C3.52243 4.27279 4.27279 3.52243 5.2338 3.29701C6.06663 3.10165 6.93337 3.10165 7.7662 3.29701C8.72721 3.52243 9.47757 4.27279 9.70299 5.2338C9.89835 6.06663 9.89835 6.93337 9.70299 7.7662C9.47757 8.72721 8.72721 9.47757 7.7662 9.70299C6.93337 9.89835 6.06663 9.89835 5.2338 9.70299C4.27279 9.47757 3.52243 8.72721 3.29701 7.7662C3.10166 6.93337 3.10166 6.06663 3.29701 5.2338Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
      <path
        d="M3.29701 16.2338C3.52243 15.2728 4.27279 14.5224 5.2338 14.297C6.06663 14.1017 6.93337 14.1017 7.7662 14.297C8.72721 14.5224 9.47757 15.2728 9.70299 16.2338C9.89835 17.0666 9.89835 17.9334 9.70299 18.7662C9.47757 19.7272 8.72721 20.4776 7.7662 20.703C6.93337 20.8983 6.06663 20.8983 5.2338 20.703C4.27279 20.4776 3.52243 19.7272 3.29701 18.7662C3.10166 17.9334 3.10166 17.0666 3.29701 16.2338Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
      <path
        d="M14.297 5.2338C14.5224 4.27279 15.2728 3.52243 16.2338 3.29701C17.0666 3.10165 17.9334 3.10165 18.7662 3.29701C19.7272 3.52243 20.4776 4.27279 20.703 5.2338C20.8983 6.06663 20.8983 6.93337 20.703 7.7662C20.4776 8.72721 19.7272 9.47757 18.7662 9.70299C17.9334 9.89835 17.0666 9.89835 16.2338 9.70299C15.2728 9.47757 14.5224 8.72721 14.297 7.7662C14.1017 6.93337 14.1017 6.06663 14.297 5.2338Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
      <path
        d="M14.297 16.2338C14.5224 15.2728 15.2728 14.5224 16.2338 14.297C17.0666 14.1017 17.9334 14.1017 18.7662 14.297C19.7272 14.5224 20.4776 15.2728 20.703 16.2338C20.8983 17.0666 20.8983 17.9334 20.703 18.7662C20.4776 19.7272 19.7272 20.4776 18.7662 20.703C17.9334 20.8983 17.0666 20.8983 16.2338 20.703C15.2728 20.4776 14.5224 19.7272 14.297 18.7662C14.1017 17.9334 14.1017 17.0666 14.297 16.2338Z"
        fill={fill ?? '#363853'}
        fillOpacity="0.15"
        stroke={fill ?? '#363853'}
        strokeWidth="1.5"
      />
    </svg>
  );
};

// Search Icon
const SearchIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '20'}
      height={height ?? '20'}
      viewBox={`0 0 ${width ?? 20} ${height ?? 20}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M2.76311 11.4842L3.49329 11.3129L2.76311 11.4842ZM2.76311 6.93667L3.49329 7.10794L2.76311 6.93667ZM15.6578 6.93667L16.3879 6.76539L15.6578 6.93667ZM15.6578 11.4842L16.3879 11.6555L15.6578 11.4842ZM11.4842 15.6578L11.3129 14.9276L11.4842 15.6578ZM6.93667 15.6578L6.76539 16.3879L6.93667 15.6578ZM6.93667 2.76311L6.76539 2.03293V2.03293L6.93667 2.76311ZM11.4842 2.76311L11.6555 2.03293L11.4842 2.76311ZM16.9697 18.0303C17.2626 18.3232 17.7374 18.3232 18.0303 18.0303C18.3232 17.7374 18.3232 17.2626 18.0303 16.9697L16.9697 18.0303ZM3.49329 11.3129C3.1689 9.93004 3.1689 8.49084 3.49329 7.10794L2.03293 6.76539C1.65569 8.3736 1.65569 10.0473 2.03293 11.6555L3.49329 11.3129ZM14.9276 7.10795C15.252 8.49084 15.252 9.93004 14.9276 11.3129L16.3879 11.6555C16.7652 10.0473 16.7652 8.3736 16.3879 6.76539L14.9276 7.10795ZM11.3129 14.9276C9.93004 15.252 8.49084 15.252 7.10795 14.9276L6.76539 16.3879C8.3736 16.7652 10.0473 16.7652 11.6555 16.3879L11.3129 14.9276ZM7.10794 3.49329C8.49084 3.1689 9.93004 3.1689 11.3129 3.49329L11.6555 2.03293C10.0473 1.65569 8.3736 1.65569 6.76539 2.03293L7.10794 3.49329ZM7.10795 14.9276C5.31441 14.5069 3.914 13.1065 3.49329 11.3129L2.03293 11.6555C2.58373 14.0037 4.41721 15.8371 6.76539 16.3879L7.10795 14.9276ZM11.6555 16.3879C14.0037 15.8371 15.8371 14.0037 16.3879 11.6555L14.9276 11.3129C14.5069 13.1065 13.1065 14.5069 11.3129 14.9276L11.6555 16.3879ZM11.3129 3.49329C13.1065 3.91399 14.5069 5.31441 14.9276 7.10795L16.3879 6.76539C15.8371 4.41721 14.0037 2.58373 11.6555 2.03293L11.3129 3.49329ZM6.76539 2.03293C4.41721 2.58373 2.58373 4.41721 2.03293 6.76539L3.49329 7.10794C3.914 5.3144 5.31441 3.91399 7.10794 3.49329L6.76539 2.03293ZM13.9156 14.9763L16.9697 18.0303L18.0303 16.9697L14.9763 13.9156L13.9156 14.9763Z"
        fill={fill ?? '#363853'}
      />
    </svg>
  );
};

// Settings Icon
const SettingsIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.2 19.2C10.2 20.1941 11.0059 21 12 21C12.9941 21 13.8 20.1941 13.8 19.2V18.0391C14.219 17.9144 14.6197 17.7473 14.9972 17.5428L15.8184 18.364C16.5213 19.0669 17.661 19.0669 18.364 18.364C19.0669 17.661 19.0669 16.5213 18.364 15.8184L17.5428 14.9972C17.7473 14.6197 17.9144 14.219 18.0391 13.8H19.2C20.1941 13.8 21 12.9941 21 12C21 11.0059 20.1941 10.2 19.2 10.2H18.0391C17.9144 9.78102 17.7473 9.3803 17.5428 9.00282L18.364 8.18163C19.0669 7.47869 19.0669 6.33899 18.364 5.63604C17.661 4.9331 16.5213 4.9331 15.8184 5.63604L14.9972 6.45724C14.6197 6.2527 14.219 6.08559 13.8 5.96089V4.8C13.8 3.80589 12.9941 3 12 3C11.0059 3 10.2 3.80589 10.2 4.8V5.96089C9.78101 6.08559 9.3803 6.2527 9.00282 6.45724L8.18163 5.63605C7.47869 4.9331 6.33899 4.9331 5.63604 5.63605C4.9331 6.33899 4.9331 7.47869 5.63604 8.18163L6.45724 9.00283C6.2527 9.3803 6.08559 9.78102 5.96089 10.2H4.8C3.80589 10.2 3 11.0059 3 12C3 12.9941 3.80589 13.8 4.8 13.8H5.96089C6.08559 14.219 6.2527 14.6197 6.45724 14.9972L5.63603 15.8184C4.93309 16.5213 4.93309 17.661 5.63603 18.364C6.33897 19.0669 7.47867 19.0669 8.18161 18.364L9.00282 17.5428C9.38029 17.7473 9.78101 17.9144 10.2 18.0391V19.2ZM12 14.7C13.4912 14.7 14.7 13.4912 14.7 12C14.7 10.5088 13.4912 9.29999 12 9.29999C10.5088 9.29999 9.29999 10.5088 9.29999 12C9.29999 13.4912 10.5088 14.7 12 14.7Z"
        fill={fill ?? '#363853'}
      />
    </svg>
  );
};

// Notification Icon
const NotificationIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.76529 18.2833C8.75176 18.2206 8.74081 18.1576 8.73239 18.0946C8.03265 18.0076 7.33546 17.8925 6.64245 17.7494L6.29899 17.6784C4.96113 17.4022 4 16.2092 4 14.8249C4 13.829 4.49292 12.951 5.2433 12.4262C5.02906 11.037 5.10563 9.61694 5.46866 8.2587L5.51871 8.07144C6.11763 5.83064 7.81404 4.04488 9.98686 3.33087C11.3311 2.88913 12.794 2.88787 14.139 3.33816C16.28 4.05497 17.9176 5.82206 18.4898 8.03325L18.5568 8.29186C18.906 9.64141 18.9741 11.0495 18.7571 12.4265C19.5072 12.9513 20 13.8292 20 14.8249C20 16.2092 19.0389 17.4022 17.701 17.6784L17.3576 17.7494C16.6645 17.8925 15.9673 18.0076 15.2676 18.0946C15.2592 18.1576 15.2482 18.2206 15.2347 18.2833L15.1684 18.5904C14.9261 19.7135 14.071 20.5966 12.9679 20.8629L12.7888 20.9061C12.2702 21.0313 11.7298 21.0313 11.2112 20.9061L11.032 20.8629C9.92905 20.5966 9.07386 19.7135 8.83156 18.5904L8.76529 18.2833ZM10.1583 18.2328C11.3846 18.3184 12.6154 18.3184 13.8417 18.2328L13.8287 18.2933C13.6989 18.8947 13.241 19.3676 12.6503 19.5102L12.4712 19.5534C12.1614 19.6282 11.8386 19.6282 11.5288 19.5534L11.3497 19.5102C10.759 19.3676 10.3011 18.8947 10.1713 18.2933L10.1583 18.2328Z"
        fill={fill ?? '#363853'}
      />
    </svg>
  );
};

// Action Icon
const ActionButtonIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g clipPath="url(#clip0_88_126)">
        <path
          d="M12 8C13.1 8 14 7.1 14 6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6C10 7.1 10.9 8 12 8ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM12 16C10.9 16 10 16.9 10 18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18C14 16.9 13.1 16 12 16Z"
          fill={fill ?? '#A3AED0'}
        />
      </g>
      <defs>
        <clipPath id="clip0_88_126">
          <rect width={width ?? '24'} height={height ?? '24'} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

// ForK Icon with specific background color
const ForkIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '27'}
      height={height ?? '27'}
      viewBox={`0 0 ${width ?? 27} ${height ?? 27}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <rect width={width ?? '27'} height={height ?? '27'} rx="4" fill="#EEEAFF" />
      {/* This fill is for specific background */}
      <path
        d="M8.93762 11.2723C9.05521 12.1103 9.4965 13.5439 11.1242 14.1616C12.7917 14.7955 12.7917 15.2949 12.7917 15.625V15.7405C11.7717 16.0479 11.0208 16.985 11.0208 18.1042C11.0208 19.4713 12.1329 20.5833 13.5 20.5833C14.8671 20.5833 15.9792 19.4713 15.9792 18.1042C15.9792 16.985 15.2283 16.0479 14.2083 15.7405V15.625C14.2083 15.2949 14.2083 14.7955 15.8757 14.1623C17.5035 13.5446 17.9448 12.111 18.0624 11.273C19.1043 10.979 19.875 10.0306 19.875 8.89584C19.875 7.52876 18.7629 6.41667 17.3958 6.41667C16.0287 6.41667 14.9167 7.52876 14.9167 8.89584C14.9167 9.99517 15.6406 10.9181 16.6337 11.2425C16.5302 11.7632 16.2335 12.5112 15.3742 12.8377C14.5299 13.1579 13.92 13.5128 13.5 13.9257C13.08 13.5128 12.4708 13.1579 11.6258 12.8377C10.7665 12.5112 10.469 11.7632 10.3663 11.2425C11.3594 10.9181 12.0833 9.99517 12.0833 8.89584C12.0833 7.52876 10.9712 6.41667 9.60417 6.41667C8.23708 6.41667 7.125 7.52876 7.125 8.89584C7.125 10.0306 7.89567 10.979 8.93762 11.2723ZM17.3958 7.83334C17.9816 7.83334 18.4583 8.31005 18.4583 8.89584C18.4583 9.48163 17.9816 9.95834 17.3958 9.95834C16.81 9.95834 16.3333 9.48163 16.3333 8.89584C16.3333 8.31005 16.81 7.83334 17.3958 7.83334ZM14.5625 18.1042C14.5625 18.69 14.0858 19.1667 13.5 19.1667C12.9142 19.1667 12.4375 18.69 12.4375 18.1042C12.4375 17.5184 12.9142 17.0417 13.5 17.0417C14.0858 17.0417 14.5625 17.5184 14.5625 18.1042ZM9.60417 7.83334C10.19 7.83334 10.6667 8.31005 10.6667 8.89584C10.6667 9.48163 10.19 9.95834 9.60417 9.95834C9.01837 9.95834 8.54167 9.48163 8.54167 8.89584C8.54167 8.31005 9.01837 7.83334 9.60417 7.83334Z"
        fill={fill ?? '#5630FF'}
      />
    </svg>
  );
};

// Email Icon
const EmailIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '20'}
      height={height ?? '20'}
      viewBox={`0 0 ${width ?? 20} ${height ?? 20}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <rect width={width ?? '20'} height={height ?? '20'} rx="7" fill="#E5DFFF" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.08579 5.1835C9.34665 4.93883 10.6534 4.93883 11.9142 5.1835L12.178 5.23468C13.2661 5.44582 14.2119 5.97912 14.8783 6.71756C14.9871 6.8381 14.9506 7.0119 14.8068 7.10001L10.8246 9.54172C10.3295 9.84528 9.67052 9.84528 9.17543 9.54172L5.19315 7.10001C5.04945 7.0119 5.01287 6.8381 5.12166 6.71757C5.78814 5.97913 6.73395 5.44582 7.82203 5.23468L8.08579 5.1835ZM4.79492 7.88075C4.62816 7.7785 4.3957 7.83712 4.33257 8.00662C4.29732 8.10129 4.26577 8.19749 4.23809 8.2951C3.92064 9.4147 3.92064 10.5853 4.23809 11.7049C4.67284 13.2381 6.06111 14.4236 7.82203 14.7653L8.08579 14.8165C9.34665 15.0612 10.6534 15.0612 11.9142 14.8165L12.178 14.7653C13.9389 14.4236 15.3272 13.2381 15.7619 11.7049C16.0794 10.5853 16.0794 9.4147 15.7619 8.29511C15.7342 8.19749 15.7027 8.10128 15.6674 8.00661C15.6043 7.83711 15.3718 7.77849 15.2051 7.88074L11.3743 10.2296C10.5491 10.7355 9.45087 10.7355 8.62572 10.2296L4.79492 7.88075Z"
        fill={fill ?? '#00156A'}
      />
    </svg>
  );
};

// Call Icon
const CallIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '20'}
      height={height ?? '20'}
      viewBox={`0 0 ${width ?? 20} ${height ?? 20}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <rect width={width ?? '20'} height={height ?? '20'} rx="7" fill="#E5DFFF" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M7.28031 5C7.09318 5 6.90731 5.02853 6.72816 5.08447L6.59121 5.12723C5.79348 5.37633 5.21576 6.08883 5.06558 6.94111C4.97814 7.43734 4.97814 7.94728 5.06558 8.44351C5.06902 8.46302 5.07268 8.48246 5.07657 8.50183C5.70225 11.7539 8.24603 14.2977 11.4981 14.9234C11.5175 14.9273 11.537 14.931 11.5565 14.9344C12.0527 15.0219 12.5627 15.0219 13.0589 14.9344C13.9112 14.7842 14.6237 14.2065 14.8728 13.4088L14.9155 13.2718C14.9715 13.0927 15 12.9068 15 12.7197C15 11.8202 14.208 11.1538 13.3123 11.1538H11.3031C10.4074 11.1538 9.61539 11.8202 9.61539 12.7197C9.61539 12.9068 9.64392 13.0927 9.69986 13.2718L9.74262 13.4088C9.75722 13.4555 9.77341 13.5016 9.79113 13.5468C8.34217 12.8333 7.16672 11.6578 6.45324 10.2089C6.49845 10.2266 6.54445 10.2428 6.59121 10.2574L6.72816 10.3001C6.90731 10.3561 7.09318 10.3846 7.28031 10.3846C8.17977 10.3846 8.84616 9.59259 8.84615 8.69689L8.84615 6.68773C8.84616 5.79203 8.17977 5 7.28031 5Z"
        fill={fill ?? '#00156A'}
      />
    </svg>
  );
};

// Edit Icon
const EditIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '12'}
      height={height ?? '11'}
      viewBox={`0 0 ${width ?? 12} ${height ?? 11}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M2.502 1.38163V1.99918H2C1.46957 1.99918 0.960859 2.20992 0.585786 2.58502C0.210714 2.96013 0 3.46888 0 3.99936V7.49968C0 7.89754 0.158035 8.27911 0.43934 8.56044C0.720644 8.84177 1.10218 8.99982 1.5 8.99982H2.5V9.49986C2.5 9.89773 2.65804 10.2793 2.93934 10.5606C3.22064 10.842 3.60218 11 4 11H8C8.39782 11 8.77936 10.842 9.06066 10.5606C9.34196 10.2793 9.5 9.89773 9.5 9.49986V8.99982H10.5C10.8978 8.99982 11.2794 8.84177 11.5607 8.56044C11.842 8.27911 12 7.89754 12 7.49968V3.99936C12 3.46888 11.7893 2.96013 11.4142 2.58502C11.0391 2.20992 10.5304 1.99918 10 1.99918H9.5V1.37513C9.5 1.19437 9.46437 1.01539 9.39514 0.848426C9.32592 0.681458 9.22446 0.529777 9.09657 0.402058C8.96867 0.27434 8.81686 0.173091 8.6498 0.104102C8.48275 0.0351132 8.30374 -0.000261458 8.123 1.45481e-06L3.875 0.00650205C3.51067 0.00703203 3.16145 0.152145 2.90402 0.409973C2.64659 0.667802 2.502 1.01727 2.502 1.38163ZM9.5 8.24975V6.99964C9.5 6.60178 9.34196 6.22021 9.06066 5.93888C8.77936 5.65755 8.39782 5.4995 8 5.4995H4C3.60218 5.4995 3.22064 5.65755 2.93934 5.93888C2.65804 6.22021 2.5 6.60178 2.5 6.99964V8.24975H1.5C1.30109 8.24975 1.11032 8.17073 0.96967 8.03006C0.829018 7.8894 0.75 7.69861 0.75 7.49968V3.99936C0.75 3.66781 0.881696 3.34984 1.11612 3.1154C1.35054 2.88096 1.66848 2.74925 2 2.74925H10C10.3315 2.74925 10.6495 2.88096 10.8839 3.1154C11.1183 3.34984 11.25 3.66781 11.25 3.99936V7.49968C11.25 7.69861 11.171 7.8894 11.0303 8.03006C10.8897 8.17073 10.6989 8.24975 10.5 8.24975H9.5ZM8.75 1.37513V1.99918H3.252V1.38163C3.252 1.0366 3.531 0.75707 3.876 0.75657L8.124 0.750069C8.20616 0.749938 8.28754 0.766008 8.36348 0.797362C8.43943 0.828715 8.50845 0.874736 8.56659 0.93279C8.62473 0.990845 8.67086 1.0598 8.70233 1.1357C8.7338 1.2116 8.75 1.29296 8.75 1.37513ZM4 6.24957H8C8.19891 6.24957 8.38968 6.32859 8.53033 6.46926C8.67098 6.60992 8.75 6.80071 8.75 6.99964V9.49986C8.75 9.69879 8.67098 9.88958 8.53033 10.0302C8.38968 10.1709 8.19891 10.2499 8 10.2499H4C3.80109 10.2499 3.61032 10.1709 3.46967 10.0302C3.32902 9.88958 3.25 9.69879 3.25 9.49986V6.99964C3.25 6.80071 3.32902 6.60992 3.46967 6.46926C3.61032 6.32859 3.80109 6.24957 4 6.24957Z"
        fill={fill ?? '#2B3674'}
      />
    </svg>
  );
};

// ShowPassword Icon
const ShowPasswordIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      {...rest}
    >
      <path
        d="M3.9074 8.65134C7.53762 2.44955 16.4624 2.44955 20.0926 8.65134C21.3025 10.7182 21.3025 13.2818 20.0926 15.3487C16.4624 21.5504 7.53762 21.5504 3.9074 15.3487C2.69753 13.2818 2.69753 10.7182 3.9074 8.65134Z"
        stroke={fill ?? '#B8B8B8'}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.5567 12.0607C15.5567 14.0561 13.9637 15.6733 11.9994 15.6733C10.0352 15.6733 8.44336 14.0561 8.44336 12.0607C8.44336 10.0641 10.0352 8.44699 11.9994 8.44699C13.9637 8.44699 15.5567 10.0641 15.5567 12.0607Z"
        stroke={fill ?? '#B8B8B8'}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

// HidePassword Icon
const HidePasswordIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      {...rest}
    >
      <path
        d="M20.7399 8.27246C20.5306 7.91498 20.0712 7.79482 19.7137 8.00407C19.3563 8.21332 19.2361 8.67274 19.4453 9.03021L20.7399 8.27246ZM9.16464 18.7776C8.77298 18.6427 8.34619 18.851 8.21137 19.2426C8.07656 19.6343 8.28478 20.0611 8.67645 20.1959L9.16464 18.7776ZM13.9162 9.96831C14.216 10.2542 14.6907 10.2429 14.9766 9.94318C15.2624 9.64343 15.2512 9.16869 14.9514 8.88282L13.9162 9.96831ZM8.7432 14.9157C9.01234 15.2305 9.48577 15.2676 9.80062 14.9985C10.1155 14.7293 10.1525 14.2559 9.8834 13.941L8.7432 14.9157ZM16.3067 12.0607C16.3067 11.6465 15.9709 11.3107 15.5567 11.3107C15.1425 11.3107 14.8067 11.6465 14.8067 12.0607H16.3067ZM11.9994 14.9233C11.5852 14.9233 11.2494 15.2591 11.2494 15.6733C11.2494 16.0875 11.5852 16.4233 11.9994 16.4233V14.9233ZM20.4095 4.52614C20.7001 4.23095 20.6963 3.75609 20.4011 3.46551C20.1059 3.17493 19.6311 3.17867 19.3405 3.47386L20.4095 4.52614ZM4.15301 18.9024C3.86243 19.1976 3.86617 19.6725 4.16136 19.9631C4.45655 20.2536 4.93141 20.2499 5.22199 19.9547L4.15301 18.9024ZM19.4453 9.03021C20.5182 10.8631 20.5182 13.1369 19.4453 14.9698L20.7399 15.7275C22.0867 13.4266 22.0867 10.5734 20.7399 8.27246L19.4453 9.03021ZM19.4453 14.9698C17.2217 18.7686 12.8404 20.0427 9.16464 18.7776L8.67645 20.1959C12.9744 21.6752 18.1274 20.1907 20.7399 15.7275L19.4453 14.9698ZM4.55466 14.9698C3.48178 13.1369 3.48178 10.8631 4.55466 9.03021L3.26013 8.27246C1.91329 10.5734 1.91329 13.4266 3.26013 15.7275L4.55466 14.9698ZM6.45255 17.2388C5.72734 16.6258 5.08181 15.8704 4.55466 14.9698L3.26013 15.7275C3.87315 16.7748 4.62893 17.6614 5.48415 18.3843L6.45255 17.2388ZM4.55466 9.03021C7.26824 4.3944 13.2017 3.51996 17.1232 6.42527L18.0162 5.22C13.4173 1.81293 6.44922 2.8243 3.26013 8.27246L4.55466 9.03021ZM9.19331 12.0607C9.19331 10.467 10.4606 9.19699 11.9994 9.19699V7.69699C9.60973 7.69699 7.69331 9.66125 7.69331 12.0607H9.19331ZM11.9994 9.19699C12.7392 9.19699 13.4126 9.48802 13.9162 9.96831L14.9514 8.88282C14.1822 8.14925 13.1429 7.69699 11.9994 7.69699V9.19699ZM9.8834 13.941C9.45402 13.4387 9.19331 12.7825 9.19331 12.0607H7.69331C7.69331 13.1505 8.08864 14.15 8.7432 14.9157L9.8834 13.941ZM14.8067 12.0607C14.8067 13.6528 13.5387 14.9233 11.9994 14.9233V16.4233C14.3887 16.4233 16.3067 14.4595 16.3067 12.0607H14.8067ZM19.3405 3.47386L4.15301 18.9024L5.22199 19.9547L20.4095 4.52614L19.3405 3.47386Z"
        fill={fill ?? '#B8B8B8'}
      />
    </svg>
  );
};

// Back Icon
const BackIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '24'}
      height={height ?? '24'}
      viewBox={`0 0 ${width ?? 24} ${height ?? 24}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g clipPath="url(#clip0_270_181)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M1.5 12C1.5 14.7848 2.60625 17.4555 4.57538 19.4246C6.54451 21.3938 9.21523 22.5 12 22.5C14.7848 22.5 17.4555 21.3938 19.4246 19.4246C21.3938 17.4555 22.5 14.7848 22.5 12C22.5 9.21523 21.3938 6.54451 19.4246 4.57538C17.4555 2.60625 14.7848 1.5 12 1.5C9.21523 1.5 6.54451 2.60625 4.57538 4.57538C2.60625 6.54451 1.5 9.21523 1.5 12ZM24 12C24 15.1826 22.7357 18.2348 20.4853 20.4853C18.2348 22.7357 15.1826 24 12 24C8.8174 24 5.76516 22.7357 3.51472 20.4853C1.26428 18.2348 0 15.1826 0 12C0 8.8174 1.26428 5.76516 3.51472 3.51472C5.76516 1.26428 8.8174 0 12 0C15.1826 0 18.2348 1.26428 20.4853 3.51472C22.7357 5.76516 24 8.8174 24 12ZM17.25 11.25C17.4489 11.25 17.6397 11.329 17.7803 11.4697C17.921 11.6103 18 11.8011 18 12C18 12.1989 17.921 12.3897 17.7803 12.5303C17.6397 12.671 17.4489 12.75 17.25 12.75H8.5605L11.781 15.969C11.8507 16.0387 11.906 16.1215 11.9438 16.2126C11.9815 16.3037 12.0009 16.4014 12.0009 16.5C12.0009 16.5986 11.9815 16.6963 11.9438 16.7874C11.906 16.8785 11.8507 16.9613 11.781 17.031C11.7113 17.1007 11.6285 17.156 11.5374 17.1938C11.4463 17.2315 11.3486 17.2509 11.25 17.2509C11.1514 17.2509 11.0537 17.2315 10.9626 17.1938C10.8715 17.156 10.7887 17.1007 10.719 17.031L6.219 12.531C6.14916 12.4613 6.09374 12.3786 6.05593 12.2874C6.01812 12.1963 5.99866 12.0987 5.99866 12C5.99866 11.9013 6.01812 11.8037 6.05593 11.7125C6.09374 11.6214 6.14916 11.5387 6.219 11.469L10.719 6.969C10.8598 6.82817 11.0508 6.74905 11.25 6.74905C11.4492 6.74905 11.6402 6.82817 11.781 6.969C11.9218 7.10983 12.0009 7.30084 12.0009 7.5C12.0009 7.69916 11.9218 7.89017 11.781 8.031L8.5605 11.25H17.25Z"
          fill={fill ?? 'black'}
        />
      </g>
      <defs>
        <clipPath id="clip0_270_181">
          <rect width={width ?? '24'} height={height ?? '24'} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

// Sync Icon
const SyncIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '9'}
      height={height ?? '10'}
      viewBox={`0 0 ${width ?? 9} ${height ?? 10}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M8.5188 0C8.39517 0.00167094 8.27706 0.0531864 8.18963 0.14357C8.1022 0.233954 8.05237 0.35606 8.05075 0.483871V2.05161L7.52654 1.50968C6.98424 0.94428 6.31113 0.531585 5.57114 0.310786C4.83115 0.0899877 4.04884 0.068415 3.29852 0.248117C2.54819 0.42782 1.85476 0.802831 1.28407 1.33754C0.713382 1.87224 0.284383 2.54889 0.0378154 3.30323C0.0121399 3.36472 -0.000733418 3.43111 3.22566e-05 3.49808C0.000797931 3.56505 0.0151855 3.6311 0.0422597 3.69195C0.0693339 3.7528 0.108489 3.80708 0.157181 3.85125C0.205872 3.89543 0.263011 3.92853 0.324883 3.94839C0.376502 3.95766 0.42928 3.95766 0.480898 3.94839C0.578532 3.94736 0.67348 3.91521 0.75278 3.85632C0.832081 3.79743 0.891869 3.71468 0.923982 3.61935C1.09832 3.08394 1.39107 2.59794 1.77894 2.2C2.45265 1.50622 3.36483 1.11668 4.31575 1.11668C5.26667 1.11668 6.17885 1.50622 6.85256 2.2L7.37677 2.74194H5.87278C5.74865 2.74194 5.6296 2.79291 5.54182 2.88366C5.45405 2.9744 5.40474 3.09748 5.40474 3.22581C5.40474 3.35414 5.45405 3.47721 5.54182 3.56795C5.6296 3.6587 5.74865 3.70968 5.87278 3.70968H8.5188C8.5805 3.71055 8.64174 3.69862 8.6989 3.67461C8.75607 3.6506 8.808 3.61499 8.85163 3.56989C8.89526 3.52478 8.9297 3.4711 8.95293 3.412C8.97615 3.3529 8.98769 3.28959 8.98685 3.22581V0.483871C8.98685 0.35554 8.93753 0.232466 8.84976 0.141722C8.76198 0.0509791 8.64293 0 8.5188 0ZM8.67482 6.08387C8.61473 6.05946 8.55046 6.04798 8.48594 6.05015C8.42142 6.05231 8.358 6.06807 8.29958 6.09646C8.24116 6.12485 8.18895 6.16527 8.14617 6.21524C8.10338 6.26522 8.07091 6.3237 8.05075 6.3871C7.87641 6.92251 7.58367 7.40851 7.19579 7.80645C6.52208 8.50023 5.6099 8.88977 4.65898 8.88977C3.70806 8.88977 2.79589 8.50023 2.12218 7.80645L1.59797 7.26452H3.1394C3.26353 7.26452 3.38258 7.21354 3.47036 7.12279C3.55813 7.03205 3.60744 6.90898 3.60744 6.78064C3.60744 6.65231 3.55813 6.52924 3.47036 6.4385C3.38258 6.34775 3.26353 6.29677 3.1394 6.29677H0.49338C0.431683 6.29591 0.370443 6.30783 0.313278 6.33184C0.256113 6.35585 0.204181 6.39146 0.160551 6.43656C0.116921 6.48167 0.082476 6.53536 0.0592518 6.59445C0.0360276 6.65355 0.0244947 6.71686 0.0253342 6.78064V9.51613C0.0253342 9.64446 0.0746459 9.76753 0.162421 9.85828C0.250197 9.94902 0.369246 10 0.49338 10C0.617513 10 0.736562 9.94902 0.824338 9.85828C0.912113 9.76753 0.961425 9.64446 0.961425 9.51613V7.94839L1.48564 8.49032C2.02794 9.05572 2.70105 9.46842 3.44104 9.68921C4.18103 9.91001 4.96334 9.93158 5.71366 9.75188C6.46398 9.57218 7.15742 9.19717 7.72811 8.66246C8.2988 8.12776 8.7278 7.45111 8.97436 6.69677C8.99473 6.63625 9.0031 6.57211 8.99898 6.50817C8.99486 6.44424 8.97833 6.38181 8.95037 6.32462C8.92242 6.26743 8.88362 6.21664 8.83628 6.17527C8.78894 6.13391 8.73402 6.10283 8.67482 6.08387Z"
        fill={fill ?? '#5630FF'}
      />
    </svg>
  );
};

// Trash Icon with Backgroud
const TrashIconWithBackground = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '27'}
      height={height ?? '27'}
      viewBox={`0 0 ${width ?? 27} ${height ?? 27}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <rect width={width ?? '27'} height={height ?? '27'} rx="4" fill="#FFEAEA" />
      {/* This fill is for specific Background */}
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M13.5 7.125C13.0567 7.125 12.6167 7.20314 12.2046 7.35601C11.7925 7.50889 11.4146 7.73421 11.0937 8.02158C10.7727 8.30905 10.5146 8.65351 10.3372 9.03704C10.2299 9.26887 10.1538 9.51165 10.1103 9.76004H7.61538C7.34455 9.76004 7.125 9.98125 7.125 10.2541C7.125 10.527 7.34455 10.7482 7.61538 10.7482H8.43269V13.6149C8.43269 14.6908 8.58415 15.7613 8.88255 16.7943C9.3288 18.3392 10.6136 19.4903 12.1886 19.7563L12.2917 19.7737C13.0916 19.9088 13.9083 19.9088 14.7083 19.7737L14.8114 19.7563C16.3864 19.4903 17.6712 18.3392 18.1174 16.7944C18.4158 15.7613 18.5673 14.6908 18.5673 13.6149V10.7482H19.3846C19.6554 10.7482 19.875 10.527 19.875 10.2541C19.875 9.98125 19.6554 9.76004 19.3846 9.76004H16.8897C16.8462 9.51165 16.7701 9.26887 16.6628 9.03704C16.4854 8.65351 16.2273 8.30905 15.9063 8.02158C15.5854 7.73421 15.2075 7.50889 14.7954 7.35601C14.3833 7.20314 13.9433 7.125 13.5 7.125ZM12.5435 8.28329C12.8453 8.17132 13.1705 8.11314 13.5 8.11314C13.8295 8.11314 14.1547 8.17132 14.4565 8.28329C14.7584 8.39526 15.0292 8.55813 15.2547 8.76013C15.4802 8.96203 15.6555 9.19855 15.7738 9.45441C15.82 9.55417 15.8572 9.65634 15.8855 9.76004L11.1145 9.76004C11.1428 9.65634 11.18 9.55417 11.2262 9.45441C11.3445 9.19855 11.5198 8.96203 11.7453 8.76013C11.9708 8.55813 12.2416 8.39526 12.5435 8.28329ZM12.1923 13.0539C12.4631 13.0539 12.6827 13.2751 12.6827 13.5479V16.183C12.6827 16.4558 12.4631 16.677 12.1923 16.677C11.9215 16.677 11.7019 16.4558 11.7019 16.183V13.5479C11.7019 13.2751 11.9215 13.0539 12.1923 13.0539ZM14.8077 13.0539C15.0785 13.0539 15.2981 13.2751 15.2981 13.5479V16.183C15.2981 16.4558 15.0785 16.677 14.8077 16.677C14.5369 16.677 14.3173 16.4558 14.3173 16.183V13.5479C14.3173 13.2751 14.5369 13.0539 14.8077 13.0539Z"
        fill={fill ?? '#FF4545'}
      />
    </svg>
  );
};

// Cross Icon
const CrossIcon = (props: SVGProps<SVGSVGElement>): JSX.Element => {
  const { width, height, fill, ...rest } = props;
  return (
    <svg
      width={width ?? '20'}
      height={height ?? '20'}
      viewBox={`0 0 ${width ?? 20} ${height ?? 20}`}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <path
        d="M13.5 6.5L6.5 13.5M6.5 6.5L13.5 13.5"
        stroke={fill ?? '#667085'}
        strokeWidth="1.66667"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export {
  GoogleIcon,
  FacebookIcon,
  ChargeIcon,
  NavIcon,
  PlusCircleIcon,
  CrossIcon,
  CrossCircleIcon,
  ContactIcon,
  FrequentIcon,
  ImportIcon,
  TrashIcon,
  OtherContactIcon,
  SearchIcon,
  SettingsIcon,
  NotificationIcon,
  ActionButtonIcon,
  ForkIcon,
  EmailIcon,
  CallIcon,
  EditIcon,
  ShowPasswordIcon,
  HidePasswordIcon,
  BackIcon,
  SyncIcon,
  TrashIconWithBackground,
};
